!function(t){function e(e){for(var r,c,i=e[0],u=e[1],s=e[2],f=0,p=[];f<i.length;f++)c=i[f],Object.prototype.hasOwnProperty.call(o,c)&&o[c]&&p.push(o[c][0]),o[c]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(t[r]=u[r]);for(l&&l(e);p.length;)p.shift()();return a.push.apply(a,s||[]),n()}function n(){for(var t,e=0;e<a.length;e++){for(var n=a[e],r=!0,i=1;i<n.length;i++){var u=n[i];0!==o[u]&&(r=!1)}r&&(a.splice(e--,1),t=c(c.s=n[0]))}return t}var r={},o={3:0},a=[];function c(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,c),n.l=!0,n.exports}c.m=t,c.c=r,c.d=function(t,e,n){c.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},c.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},c.t=function(t,e){if(1&e&&(t=c(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(c.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)c.d(n,r,function(e){return t[e]}.bind(null,r));return n},c.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return c.d(e,"a",e),e},c.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},c.p="";var i=window.webpackJsonp=window.webpackJsonp||[],u=i.push.bind(i);i.push=e,i=i.slice();for(var s=0;s<i.length;s++)e(i[s]);var l=u;a.push([50,1,0]),n()}({10:function(t,e,n){"use strict";var r=n(3);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e,n,r,o,a,c){try{var i=t[a](c),u=i.value}catch(t){return void n(t)}i.done?e(u):Promise.resolve(u).then(r,o)}function c(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var c=t.apply(e,n);function i(t){a(c,r,o,i,u,"next",t)}function u(t){a(c,r,o,i,u,"throw",t)}i(void 0)}))}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function l(t){var e="function"==typeof Map?new Map:void 0;return(l=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return f(t,arguments,d(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),h(r,t)})(t)}function f(t,e,n){return(f=p()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var o=new(Function.bind.apply(t,r));return n&&h(o,n.prototype),o}).apply(null,arguments)}function p(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var v=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(m,t);var e,n,o,a,l,f,v,y=(e=m,n=p(),function(){var t,r=d(e);if(n){var o=d(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return s(this,t)});function m(){return i(this,m),y.apply(this,arguments)}return o=m,(a=[{key:"connectedCallback",value:(v=c(regeneratorRuntime.mark((function t(){var e,n,r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.loading(),e=new URLSearchParams(window.location.search),n=e.get("code"),t.next=5,this.loadScorer(n);case 5:r=t.sent,this._list=r?r.slice(0,5):r,this._list?this.render():this.innerHTML='\n        <div class="container center-column">\n            <h5>Scorers</h5>\n            <h5 style="text-align: center; font-family: var(--font-tertiary);">Oops.. cannot get the scorers. Please try again in a minute</h5>\n        </div>\n        ';case 8:case"end":return t.stop()}}),t,this)}))),function(){return v.apply(this,arguments)})},{key:"loading",value:function(){this.innerHTML='\n        <div class="container center-column">\n            <h5>Competition Scorers</h5>\n            <div class="progress"><div class="indeterminate"></div></div>\n        </div>\n        '}},{key:"loadScorer",value:(f=c(regeneratorRuntime.mark((function t(e){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,Object(r.b)(e.toUpperCase());case 3:return n=t.sent,t.abrupt("return",n);case 7:return t.prev=7,t.t0=t.catch(0),t.abrupt("return",!1);case 10:case"end":return t.stop()}}),t,null,[[0,7]])}))),function(t){return f.apply(this,arguments)})},{key:"cardItem",value:function(t){var e=t.player,n=t.team,r=t.numberOfGoals;return'\n        <li class="scorer">\n            <div class="collapsible-header scorer-header">'.concat(e.name,'</div>\n            <div class="collapsible-body scorer-body"><span>').concat(r," Goals for ").concat(n.name,"</span></div>\n        </li>\n        ")}},{key:"render",value:function(){var t=this;this.innerHTML='\n        <div class="container center-column">\n            <h5>Scorers</h5>\n            <ul class="collapsible">\n                '.concat(this._list&&this._list.reduce((function(e,n){return e+t.cardItem(n)}),""),"\n            </ul>\n        </div>\n        ");var e=document.querySelectorAll(".collapsible");M.Collapsible.init(e);var n=document.querySelectorAll(".scorer"),r=document.querySelectorAll(".scorer-body");n[0].classList.toggle("active"),r[0].style.display="block"}}])&&u(o.prototype,a),l&&u(o,l),m}(l(HTMLElement));customElements.define("scorer-elem",v)},11:function(t,e,n){"use strict";n(5);var r=n(3),o=n.p+"src/assets/images/crest.png",a=n(4);function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e,n,r,o,a,c){try{var i=t[a](c),u=i.value}catch(t){return void n(t)}i.done?e(u):Promise.resolve(u).then(r,o)}function u(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var a=t.apply(e,n);function c(t){i(a,r,o,c,u,"next",t)}function u(t){i(a,r,o,c,u,"throw",t)}c(void 0)}))}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function f(t,e){return!e||"object"!==c(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function p(t){var e="function"==typeof Map?new Map:void 0;return(p=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return h(t,arguments,y(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),v(r,t)})(t)}function h(t,e,n){return(h=d()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var o=new(Function.bind.apply(t,r));return n&&v(o,n.prototype),o}).apply(null,arguments)}function d(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function v(t,e){return(v=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function y(t){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var m=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&v(t,e)}(g,t);var e,n,c,i,p,h,m,b=(e=g,n=d(),function(){var t,r=y(e);if(n){var o=y(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return f(this,t)});function g(){return s(this,g),b.apply(this,arguments)}return c=g,(i=[{key:"connectedCallback",value:(m=u(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.loading(),t.next=3,this.getTeams();case 3:this._list=t.sent,this._list&&0!==this._list.length?this.render():(e="keeper"===window.location.hash.slice(1),this.innerHTML=e?'\n                <div class="comp-container">\n                    <h5>Teams</h5>\n                    <h5 style="text-align: center; font-family: var(--font-tertiary);">There\'s no team saved yet!</h5>\n                </div>\n                ':'\n                <div class="comp-container">\n                    <h5>Competitions</h5>\n                    <div class="carousel">\n                        <h5 style="text-align: center; font-family: var(--font-tertiary);">Oops.. cannot get the teams. Please try again in a minute</h5>\n                    </div>\n                </div>\n                ');case 5:case"end":return t.stop()}}),t,this)}))),function(){return m.apply(this,arguments)})},{key:"loading",value:function(){this.innerHTML='\n        <div class="comp-container">\n            <h5>Teams</h5>\n            <div class="carousel">\n                <div class="progress"><div class="indeterminate"></div></div>\n            </div>\n        </div>\n        '}},{key:"getTeams",value:(h=u(regeneratorRuntime.mark((function t(){var e,n,o,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(window.location.hash.slice(1)){t.next=16;break}return e=new URLSearchParams(window.location.search),n=e.get("code"),t.prev=4,t.next=7,Object(r.d)(n.toUpperCase());case 7:return o=t.sent,t.abrupt("return",o);case 11:return t.prev=11,t.t0=t.catch(4),t.abrupt("return",null);case 14:t.next=26;break;case 16:return t.prev=16,t.next=19,Object(a.d)();case 19:return c=t.sent,t.abrupt("return",c);case 23:return t.prev=23,t.t1=t.catch(16),t.abrupt("return",null);case 26:case"end":return t.stop()}}),t,null,[[4,11],[16,23]])}))),function(){return h.apply(this,arguments)})},{key:"carouselItem",value:function(t){return"keeper"===window.location.hash.slice(1)?localStorage.setItem("is-from-keeper",!0):localStorage.setItem("is-from-keeper",!1),'\n        <a class="carousel-item team" href="./team-detail.html?id='.concat(t.id,'">\n            <img class="responsive-img" src="').concat(t.crestUrl,'">\n            <p class="team-name">').concat(t.shortName,"</p>\n        </a>")}},{key:"render",value:function(){var t=this;this.innerHTML='\n        <div class="comp-container">\n            <h5>Teams</h5>\n            <div class="carousel">\n                '.concat(this._list&&this._list.reduce((function(e,n){return e+t.carouselItem(n)}),""),"\n            </div>\n        </div>\n        "),document.querySelectorAll("img.responsive-img").forEach((function(t){t.addEventListener("error",(function(){t.setAttribute("src",o)}))}));var e=document.querySelectorAll(".carousel");M.Carousel.init(e)}}])&&l(c.prototype,i),p&&l(c,p),g}(p(HTMLElement));customElements.define("team-elem",m)},3:function(t,e,n){"use strict";n.d(e,"a",(function(){return u})),n.d(e,"d",(function(){return s})),n.d(e,"b",(function(){return l})),n.d(e,"c",(function(){return f}));var r=n(0),o=n.n(r),a=n(1);function c(t,e,n,r,o,a,c){try{var i=t[a](c),u=i.value}catch(t){return void n(t)}i.done?e(u):Promise.resolve(u).then(r,o)}function i(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var a=t.apply(e,n);function i(t){c(a,r,o,i,u,"next",t)}function u(t){c(a,r,o,i,u,"throw",t)}i(void 0)}))}}var u=function(){var t=i(regeneratorRuntime.mark((function t(){var e,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=[2002,2003,2014,2015,2021],t.prev=1,n=Promise.all(e.map(function(){var t=i(regeneratorRuntime.mark((function t(e){var n,r,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!("caches"in window)){t.next=27;break}return t.next=3,caches.match("https://api.football-data.org/v2/competitions/"+e);case 3:if(!(n=t.sent)){t.next=11;break}return t.next=7,n.json();case 7:return r=t.sent,t.abrupt("return",r);case 11:return t.prev=11,t.next=14,o.a.get("https://api.football-data.org/v2/competitions/".concat(e),a.a);case 14:if(200!==(c=t.sent).status){t.next=19;break}return t.abrupt("return",c.data);case 19:return t.abrupt("return",null);case 20:t.next=25;break;case 22:return t.prev=22,t.t0=t.catch(11),t.abrupt("return",null);case 25:t.next=28;break;case 27:console.log("Cache isn't supported in this browser.");case 28:case"end":return t.stop()}}),t,null,[[11,22]])})));return function(e){return t.apply(this,arguments)}}())),t.abrupt("return",n);case 6:return t.prev=6,t.t0=t.catch(1),t.abrupt("return",t.t0);case 9:case"end":return t.stop()}}),t,null,[[1,6]])})));return function(){return t.apply(this,arguments)}}(),s=function(){var t=i(regeneratorRuntime.mark((function t(e){var n,r,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!("caches"in window)){t.next=23;break}return t.next=3,caches.match("https://api.football-data.org/v2/competitions/"+e+"/teams");case 3:if(!(n=t.sent)){t.next=11;break}return t.next=7,n.json();case 7:return r=t.sent,t.abrupt("return",r.teams);case 11:return t.prev=11,t.next=14,o.a.get("https://api.football-data.org/v2/competitions/".concat(e,"/teams"),a.a);case 14:return c=t.sent,t.abrupt("return",c.data.teams);case 18:return t.prev=18,t.t0=t.catch(11),t.abrupt("return",null);case 21:t.next=24;break;case 23:console.log("Cache isn't supported in this browser.");case 24:case"end":return t.stop()}}),t,null,[[11,18]])})));return function(e){return t.apply(this,arguments)}}(),l=function(){var t=i(regeneratorRuntime.mark((function t(e){var n,r,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!("caches"in window)){t.next=21;break}return t.prev=1,t.next=4,o.a.get("https://api.football-data.org/v2/competitions/".concat(e,"/scorers"),a.a);case 4:return n=t.sent,t.abrupt("return",n.data.scorers);case 8:return t.prev=8,t.t0=t.catch(1),t.next=12,caches.match("https://api.football-data.org/v2/competitions/"+e+"/scorers");case 12:if(!(r=t.sent)){t.next=18;break}return t.next=16,r.json();case 16:return c=t.sent,t.abrupt("return",c.scorers);case 18:return t.abrupt("return",null);case 19:t.next=22;break;case 21:console.log("Cache isn't supported in this browser.");case 22:case"end":return t.stop()}}),t,null,[[1,8]])})));return function(e){return t.apply(this,arguments)}}(),f=function(){var t=i(regeneratorRuntime.mark((function t(e){var n,r,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!("caches"in window)){t.next=21;break}return t.prev=1,t.next=4,o.a.get("https://api.football-data.org/v2/competitions/".concat(e,"/standings"),a.a);case 4:return n=t.sent,t.abrupt("return",n.data.standings[0].table);case 8:return t.prev=8,t.t0=t.catch(1),t.next=12,caches.match("https://api.football-data.org/v2/competitions/"+e+"/standings");case 12:if(!(r=t.sent)){t.next=18;break}return t.next=16,r.json();case 16:return c=t.sent,t.abrupt("return",c.standings[0].table);case 18:return t.abrupt("return",null);case 19:t.next=22;break;case 21:console.log("Cache isn't supported in this browser.");case 22:case"end":return t.stop()}}),t,null,[[1,8]])})));return function(e){return t.apply(this,arguments)}}()},50:function(t,e,n){"use strict";n.r(e);n(7),n(8),n(9),n(10);var r=n(3);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e,n,r,o,a,c){try{var i=t[a](c),u=i.value}catch(t){return void n(t)}i.done?e(u):Promise.resolve(u).then(r,o)}function c(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var c=t.apply(e,n);function i(t){a(c,r,o,i,u,"next",t)}function u(t){a(c,r,o,i,u,"throw",t)}i(void 0)}))}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function l(t){var e="function"==typeof Map?new Map:void 0;return(l=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return f(t,arguments,d(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),h(r,t)})(t)}function f(t,e,n){return(f=p()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var o=new(Function.bind.apply(t,r));return n&&h(o,n.prototype),o}).apply(null,arguments)}function p(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var v=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(m,t);var e,n,o,a,l,f,v,y=(e=m,n=p(),function(){var t,r=d(e);if(n){var o=d(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return s(this,t)});function m(){return i(this,m),y.apply(this,arguments)}return o=m,(a=[{key:"connectedCallback",value:(v=c(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.loading(),t.next=3,this.getStandings();case 3:this._list=t.sent,this._list?this.render():this.innerHTML='\n        <div class="table-container centering">\n            <h5 class="">Standings</h5>\n            <h5 style="text-align: center; font-family: var(--font-tertiary);">Oops.. cannot get the standings. Please try again in a minute</h5>\n        </div>\n        ';case 5:case"end":return t.stop()}}),t,this)}))),function(){return v.apply(this,arguments)})},{key:"loading",value:function(){this.innerHTML='\n        <div class="table-container centering">\n            <h5 class="">Standings</h5>\n            <div class="progress"><div class="indeterminate"></div></div>\n        </div>\n        '}},{key:"getStandings",value:(f=c(regeneratorRuntime.mark((function t(){var e,n,o;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=new URLSearchParams(window.location.search),n=e.get("code"),t.prev=2,t.next=5,Object(r.c)(n.toUpperCase());case 5:return o=t.sent,t.abrupt("return",o);case 9:return t.prev=9,t.t0=t.catch(2),t.abrupt("return",t.t0);case 12:case"end":return t.stop()}}),t,null,[[2,9]])}))),function(){return f.apply(this,arguments)})},{key:"loadRow",value:function(t){return"\n        <tr>\n            <td>".concat(t.team.name,"</td>\n            <td>").concat(t.won,"</td>\n            <td>").concat(t.draw,"</td>\n            <td>").concat(t.lost,"</td>\n            <td>").concat(t.points,"</td>\n        </tr>\n        ")}},{key:"render",value:function(){var t=this;this.innerHTML='\n        <div class="table-container centering">\n            <h5 class="">Standings</h5>\n            <table class="responsive-table striped">\n                <thead>\n                    <tr>\n                        <th>Teams</th>\n                        <th>Won</th>\n                        <th>Draw</th>\n                        <th>Lost</th>\n                        <th>Points</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    '.concat(this._list&&this._list.reduce((function(e,n){return e+t.loadRow(n)}),""),"\n                </tbody>\n            </table>\n        </div>\n        ")}}])&&u(o.prototype,a),l&&u(o,l),m}(l(HTMLElement));customElements.define("standing-elem",v);n(11),n(5);var y=n(0),m=n.n(y);function b(t,e,n,r,o,a,c){try{var i=t[a](c),u=i.value}catch(t){return void n(t)}i.done?e(u):Promise.resolve(u).then(r,o)}function g(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var a=t.apply(e,n);function c(t){b(a,r,o,c,i,"next",t)}function i(t){b(a,r,o,c,i,"throw",t)}c(void 0)}))}}var w={content:""},x=function(){var t=g(regeneratorRuntime.mark((function t(){var e,n,r,o;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=function(){var t=g(regeneratorRuntime.mark((function t(e){var n,r;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return"/dist/src/pages/detail.html",t.prev=1,t.next=4,m.a.get("/dist/src/pages/detail.html");case 4:200===(n=t.sent).status?(w.content=n.data,r=document.querySelector("#main-content"),history.pushState(w,null,"competition-detail.html?code=".concat(e)),window.onpopstate=function(t){t.state&&(w=t.state,r.innerHTML=w.content)},r.innerHTML=w.content):console.error("Something went wrong on load content!"),t.next=11;break;case 8:t.prev=8,t.t0=t.catch(1),console.error("Something went wrong on load content! ".concat(t.t0));case 11:case"end":return t.stop()}}),t,null,[[1,8]])})));return function(e){return t.apply(this,arguments)}}(),n=new URLSearchParams(window.location.search),""!==(r=n.get("code"))&&null!==r||(r="bl1"),localStorage.setItem("code",r),t.next=7,e(r);case 7:(o=document.querySelector(".sidenav-back"))&&o.addEventListener("click",(function(){window.location.pathname.match("competition-detail.html")&&(history.replaceState(w,null,"index.html#home"),window.location.reload())}));case 9:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();document.addEventListener("DOMContentLoaded",(function(){"serviceWorker"in navigator?navigator.serviceWorker.register("/service-worker.js").then((function(){console.log("Service Worker successfully registered"),x()})).catch((function(){console.log("Failed to register Service Worker")})):console.log("Service Worker isn't supported in this browser.")}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,