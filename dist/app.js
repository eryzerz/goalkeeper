!function(e){function t(t){for(var r,c,i=t[0],s=t[1],u=t[2],f=0,p=[];f<i.length;f++)c=i[f],Object.prototype.hasOwnProperty.call(o,c)&&o[c]&&p.push(o[c][0]),o[c]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(l&&l(t);p.length;)p.shift()();return a.push.apply(a,u||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],r=!0,i=1;i<n.length;i++){var s=n[i];0!==o[s]&&(r=!1)}r&&(a.splice(t--,1),e=c(c.s=n[0]))}return e}var r={},o={2:0},a=[];function c(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,c),n.l=!0,n.exports}c.m=e,c.c=r,c.d=function(e,t,n){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(c.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)c.d(n,r,function(t){return e[t]}.bind(null,r));return n},c.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="";var i=window.webpackJsonp=window.webpackJsonp||[],s=i.push.bind(i);i.push=t,i=i.slice();for(var u=0;u<i.length;u++)t(i[u]);var l=s;a.push([48,1,0]),n()}({10:function(e,t,n){"use strict";var r=n(3);function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function c(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var c=e.apply(t,n);function i(e){a(c,r,o,i,s,"next",e)}function s(e){a(c,r,o,i,s,"throw",e)}i(void 0)}))}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return!t||"object"!==o(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){var t="function"==typeof Map?new Map:void 0;return(l=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return f(e,arguments,d(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),h(r,e)})(e)}function f(e,t,n){return(f=p()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&h(o,n.prototype),o}).apply(null,arguments)}function p(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(y,e);var t,n,o,a,l,f,v,m=(t=y,n=p(),function(){var e,r=d(t);if(n){var o=d(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return u(this,e)});function y(){return i(this,y),m.apply(this,arguments)}return o=y,(a=[{key:"connectedCallback",value:(v=c(regeneratorRuntime.mark((function e(){var t,n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.loading(),t=new URLSearchParams(window.location.search),n=t.get("code"),e.next=5,this.loadScorer(n);case 5:r=e.sent,this._list=r?r.slice(0,5):r,this._list?this.render():this.innerHTML='\n        <div class="container center-column">\n            <h5>Scorers</h5>\n            <h5 style="text-align: center; font-family: var(--font-tertiary);">Oops.. cannot get the scorers. Please try again in a minute</h5>\n        </div>\n        ';case 8:case"end":return e.stop()}}),e,this)}))),function(){return v.apply(this,arguments)})},{key:"loading",value:function(){this.innerHTML='\n        <div class="container center-column">\n            <h5>Competition Scorers</h5>\n            <div class="progress"><div class="indeterminate"></div></div>\n        </div>\n        '}},{key:"loadScorer",value:(f=c(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,Object(r.b)(t.toUpperCase());case 3:return n=e.sent,e.abrupt("return",n);case 7:return e.prev=7,e.t0=e.catch(0),e.abrupt("return",!1);case 10:case"end":return e.stop()}}),e,null,[[0,7]])}))),function(e){return f.apply(this,arguments)})},{key:"cardItem",value:function(e){var t=e.player,n=e.team,r=e.numberOfGoals;return'\n        <li class="scorer">\n            <div class="collapsible-header scorer-header">'.concat(t.name,'</div>\n            <div class="collapsible-body scorer-body"><span>').concat(r," Goals for ").concat(n.name,"</span></div>\n        </li>\n        ")}},{key:"render",value:function(){var e=this;this.innerHTML='\n        <div class="container center-column">\n            <h5>Scorers</h5>\n            <ul class="collapsible">\n                '.concat(this._list&&this._list.reduce((function(t,n){return t+e.cardItem(n)}),""),"\n            </ul>\n        </div>\n        ");var t=document.querySelectorAll(".collapsible");M.Collapsible.init(t);var n=document.querySelectorAll(".scorer"),r=document.querySelectorAll(".scorer-body");n[0].classList.toggle("active"),r[0].style.display="block"}}])&&s(o.prototype,a),l&&s(o,l),y}(l(HTMLElement));customElements.define("scorer-elem",v)},11:function(e,t,n){"use strict";n(5);var r=n(3),o=n.p+"src/assets/images/crest.png",a=n(4);function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function s(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function c(e){i(a,r,o,c,s,"next",e)}function s(e){i(a,r,o,c,s,"throw",e)}c(void 0)}))}}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function p(e){var t="function"==typeof Map?new Map:void 0;return(p=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return h(e,arguments,m(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),v(r,e)})(e)}function h(e,t,n){return(h=d()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&v(o,n.prototype),o}).apply(null,arguments)}function d(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(g,e);var t,n,c,i,p,h,y,b=(t=g,n=d(),function(){var e,r=m(t);if(n){var o=m(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return f(this,e)});function g(){return u(this,g),b.apply(this,arguments)}return c=g,(i=[{key:"connectedCallback",value:(y=s(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.loading(),e.next=3,this.getTeams();case 3:this._list=e.sent,this._list&&0!==this._list.length?this.render():(t="keeper"===window.location.hash.slice(1),this.innerHTML=t?'\n                <div class="comp-container">\n                    <h5>Teams</h5>\n                    <h5 style="text-align: center; font-family: var(--font-tertiary);">There\'s no team saved yet!</h5>\n                </div>\n                ':'\n                <div class="comp-container">\n                    <h5>Competitions</h5>\n                    <div class="carousel">\n                        <h5 style="text-align: center; font-family: var(--font-tertiary);">Oops.. cannot get the teams. Please try again in a minute</h5>\n                    </div>\n                </div>\n                ');case 5:case"end":return e.stop()}}),e,this)}))),function(){return y.apply(this,arguments)})},{key:"loading",value:function(){this.innerHTML='\n        <div class="comp-container">\n            <h5>Teams</h5>\n            <div class="carousel">\n                <div class="progress"><div class="indeterminate"></div></div>\n            </div>\n        </div>\n        '}},{key:"getTeams",value:(h=s(regeneratorRuntime.mark((function e(){var t,n,o,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(window.location.hash.slice(1)){e.next=16;break}return t=new URLSearchParams(window.location.search),n=t.get("code"),e.prev=4,e.next=7,Object(r.d)(n.toUpperCase());case 7:return o=e.sent,e.abrupt("return",o);case 11:return e.prev=11,e.t0=e.catch(4),e.abrupt("return",null);case 14:e.next=26;break;case 16:return e.prev=16,e.next=19,Object(a.d)();case 19:return c=e.sent,e.abrupt("return",c);case 23:return e.prev=23,e.t1=e.catch(16),e.abrupt("return",null);case 26:case"end":return e.stop()}}),e,null,[[4,11],[16,23]])}))),function(){return h.apply(this,arguments)})},{key:"carouselItem",value:function(e){return"keeper"===window.location.hash.slice(1)?localStorage.setItem("is-from-keeper",!0):localStorage.setItem("is-from-keeper",!1),'\n        <a class="carousel-item team" href="./team-detail.html?id='.concat(e.id,'">\n            <img class="responsive-img" src="').concat(e.crestUrl,'">\n            <p class="team-name">').concat(e.shortName,"</p>\n        </a>")}},{key:"render",value:function(){var e=this;this.innerHTML='\n        <div class="comp-container">\n            <h5>Teams</h5>\n            <div class="carousel">\n                '.concat(this._list&&this._list.reduce((function(t,n){return t+e.carouselItem(n)}),""),"\n            </div>\n        </div>\n        "),document.querySelectorAll("img.responsive-img").forEach((function(e){e.addEventListener("error",(function(){e.setAttribute("src",o)}))}));var t=document.querySelectorAll(".carousel");M.Carousel.init(t)}}])&&l(c.prototype,i),p&&l(c,p),g}(p(HTMLElement));customElements.define("team-elem",y)},3:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"d",(function(){return u})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return f}));var r=n(0),o=n.n(r),a=n(1);function c(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function i(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function i(e){c(a,r,o,i,s,"next",e)}function s(e){c(a,r,o,i,s,"throw",e)}i(void 0)}))}}var s=function(){var e=i(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=[2002,2003,2014,2015,2021],e.prev=1,n=Promise.all(t.map(function(){var e=i(regeneratorRuntime.mark((function e(t){var n,r,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("caches"in window)){e.next=27;break}return e.next=3,caches.match("https://api.football-data.org/v2/competitions/"+t);case 3:if(!(n=e.sent)){e.next=11;break}return e.next=7,n.json();case 7:return r=e.sent,e.abrupt("return",r);case 11:return e.prev=11,e.next=14,o.a.get("https://api.football-data.org/v2/competitions/".concat(t),a.a);case 14:if(200!==(c=e.sent).status){e.next=19;break}return e.abrupt("return",c.data);case 19:return e.abrupt("return",null);case 20:e.next=25;break;case 22:return e.prev=22,e.t0=e.catch(11),e.abrupt("return",null);case 25:e.next=28;break;case 27:console.log("Cache isn't supported in this browser.");case 28:case"end":return e.stop()}}),e,null,[[11,22]])})));return function(t){return e.apply(this,arguments)}}())),e.abrupt("return",n);case 6:return e.prev=6,e.t0=e.catch(1),e.abrupt("return",e.t0);case 9:case"end":return e.stop()}}),e,null,[[1,6]])})));return function(){return e.apply(this,arguments)}}(),u=function(){var e=i(regeneratorRuntime.mark((function e(t){var n,r,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("caches"in window)){e.next=23;break}return e.next=3,caches.match("https://api.football-data.org/v2/competitions/"+t+"/teams");case 3:if(!(n=e.sent)){e.next=11;break}return e.next=7,n.json();case 7:return r=e.sent,e.abrupt("return",r.teams);case 11:return e.prev=11,e.next=14,o.a.get("https://api.football-data.org/v2/competitions/".concat(t,"/teams"),a.a);case 14:return c=e.sent,e.abrupt("return",c.data.teams);case 18:return e.prev=18,e.t0=e.catch(11),e.abrupt("return",null);case 21:e.next=24;break;case 23:console.log("Cache isn't supported in this browser.");case 24:case"end":return e.stop()}}),e,null,[[11,18]])})));return function(t){return e.apply(this,arguments)}}(),l=function(){var e=i(regeneratorRuntime.mark((function e(t){var n,r,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("caches"in window)){e.next=21;break}return e.prev=1,e.next=4,o.a.get("https://api.football-data.org/v2/competitions/".concat(t,"/scorers"),a.a);case 4:return n=e.sent,e.abrupt("return",n.data.scorers);case 8:return e.prev=8,e.t0=e.catch(1),e.next=12,caches.match("https://api.football-data.org/v2/competitions/"+t+"/scorers");case 12:if(!(r=e.sent)){e.next=18;break}return e.next=16,r.json();case 16:return c=e.sent,e.abrupt("return",c.scorers);case 18:return e.abrupt("return",null);case 19:e.next=22;break;case 21:console.log("Cache isn't supported in this browser.");case 22:case"end":return e.stop()}}),e,null,[[1,8]])})));return function(t){return e.apply(this,arguments)}}(),f=function(){var e=i(regeneratorRuntime.mark((function e(t){var n,r,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("caches"in window)){e.next=21;break}return e.prev=1,e.next=4,o.a.get("https://api.football-data.org/v2/competitions/".concat(t,"/standings"),a.a);case 4:return n=e.sent,e.abrupt("return",n.data.standings[0].table);case 8:return e.prev=8,e.t0=e.catch(1),e.next=12,caches.match("https://api.football-data.org/v2/competitions/"+t+"/standings");case 12:if(!(r=e.sent)){e.next=18;break}return e.next=16,r.json();case 16:return c=e.sent,e.abrupt("return",c.standings[0].table);case 18:return e.abrupt("return",null);case 19:e.next=22;break;case 21:console.log("Cache isn't supported in this browser.");case 22:case"end":return e.stop()}}),e,null,[[1,8]])})));return function(t){return e.apply(this,arguments)}}()},48:function(e,t,n){"use strict";n.r(t);n(7),n(12);var r=n(4),o=(n(8),n(9),n(5),n(3)),a=n.p+"src/assets/images/bundesliga.png",c=n.p+"src/assets/images/eredivise.png",i=n.p+"src/assets/images/laliga.png",s=n.p+"src/assets/images/ligue.png",u=n.p+"src/assets/images/premier-league.png";n(10);function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?f(Object(n),!0).forEach((function(t){h(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function v(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function c(e){d(a,r,o,c,i,"next",e)}function i(e){d(a,r,o,c,i,"throw",e)}c(void 0)}))}}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){var t="function"==typeof Map?new Map:void 0;return(g=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return w(e,arguments,O(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),k(r,e)})(e)}function w(e,t,n){return(w=x()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&k(o,n.prototype),o}).apply(null,arguments)}function x(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var S={BL1:a,DED:c,PD:i,FL1:s,PL:u},R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(l,e);var t,n,r,a,c,i,s,u=(t=l,n=x(),function(){var e,r=O(t);if(n){var o=O(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return b(this,e)});function l(){return m(this,l),u.apply(this,arguments)}return r=l,(a=[{key:"connectedCallback",value:(s=v(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.loading(),e.next=3,this.getCompetitions();case 3:this._list=e.sent,this._list.includes(null)?this.innerHTML='\n        <div class="comp-container">\n            <h5>Competitions</h5>\n            <div class="carousel">\n                <h5 style="text-align: center; font-family: var(--font-tertiary);">Oops.. cannot get all competitions. Please try again in a minute</h5>\n            </div>\n        </div>\n        ':this.render();case 5:case"end":return e.stop()}}),e,this)}))),function(){return s.apply(this,arguments)})},{key:"loading",value:function(){this.innerHTML='\n        <div class="comp-container">\n            <h5>Competitions</h5>\n            <div class="carousel">\n                <div class="progress"><div class="indeterminate"></div></div>\n            </div>\n        </div>\n        '}},{key:"getCompetitions",value:(i=v(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this._loading=!0,e.prev=1,e.next=4,Object(o.a)();case 4:return t=e.sent,this._loading=!1,e.abrupt("return",t);case 9:return e.prev=9,e.t0=e.catch(1),this._loading=!1,e.abrupt("return",e.t0);case 13:case"end":return e.stop()}}),e,this,[[1,9]])}))),function(){return i.apply(this,arguments)})},{key:"carouselItem",value:function(e){var t=p(p({},e),{},{emblemUrl:S[e.code]});return'<a class="carousel-item" href="./competition-detail.html?code='.concat(e.code.toLowerCase(),'"><img class="responsive-img" src="').concat(t.emblemUrl,'"></a>')}},{key:"render",value:function(){var e=this;this.innerHTML='\n        <div class="comp-container">\n            <h5>Competitions</h5>\n            <div class="carousel">\n                '.concat(this._list.reduce((function(t,n){return t+e.carouselItem(n)}),""),"\n            </div>\n        </div>\n        ");var t=document.querySelectorAll(".carousel");M.Carousel.init(t)}}])&&y(r.prototype,a),c&&y(r,c),l}(g(HTMLElement));customElements.define("comp-elem",R);n(11);var j=n(0),P=n.n(j),_=n(1);function T(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function E(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function c(e){T(a,r,o,c,i,"next",e)}function i(e){T(a,r,o,c,i,"throw",e)}c(void 0)}))}}var L=function(){var e=E(regeneratorRuntime.mark((function e(){var t,n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("caches"in window)){e.next=19;break}return e.prev=1,e.next=4,P.a.get("https://api.football-data.org/v2/matches?status=SCHEDULED",_.a);case 4:return t=e.sent,e.abrupt("return",t.data.matches);case 8:return e.prev=8,e.t0=e.catch(1),e.next=12,caches.match("https://api.football-data.org/v2/matches?status=SCHEDULED");case 12:if(!(n=e.sent)){e.next=18;break}return e.next=16,n.json();case 16:return r=e.sent,e.abrupt("return",r.matches);case 18:return e.abrupt("return",null);case 19:case"end":return e.stop()}}),e,null,[[1,8]])})));return function(){return e.apply(this,arguments)}}(),C=function(){var e=E(regeneratorRuntime.mark((function e(t){var n,r,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("caches"in window)){e.next=19;break}return e.prev=1,e.next=4,P.a.get("https://api.football-data.org/v2/matches/".concat(t),_.a);case 4:return n=e.sent,e.abrupt("return",n.data.match);case 8:return e.prev=8,e.t0=e.catch(1),e.next=12,caches.match("https://api.football-data.org/v2/matches/"+t);case 12:if(!(r=e.sent)){e.next=18;break}return e.next=16,r.json();case 16:return o=e.sent,e.abrupt("return",o.match);case 18:return e.abrupt("return",null);case 19:case"end":return e.stop()}}),e,null,[[1,8]])})));return function(t){return e.apply(this,arguments)}}();function D(e){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function H(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function A(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function c(e){H(a,r,o,c,i,"next",e)}function i(e){H(a,r,o,c,i,"throw",e)}c(void 0)}))}}function q(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t){return!t||"object"!==D(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function F(e){var t="function"==typeof Map?new Map:void 0;return(F=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return N(e,arguments,B(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),K(r,e)})(e)}function N(e,t,n){return(N=W()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&K(o,n.prototype),o}).apply(null,arguments)}function W(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function K(e,t){return(K=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function B(e){return(B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&K(e,t)}(l,e);var t,n,o,a,c,i,s,u=(t=l,n=W(),function(){var e,r=B(t);if(n){var o=B(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return I(this,e)});function l(){return q(this,l),u.apply(this,arguments)}return o=l,(a=[{key:"connectedCallback",value:(s=A(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.loading(),e.next=3,this.getMatches();case 3:this._list=e.sent,t=window.location.hash.slice(1),this._list&&0!==this._list.length?this.render():this.innerHTML='\n        <div class="container centering">\n            <h5>Next Matches</h5>\n            <div class="today-container">\n            '.concat("home"===t?'<h5 style="text-align: center; font-family: var(--font-tertiary);">Oops.. cannot get all matches. Please try again in a minute</h5>':'<h5 style="text-align: center; font-family: var(--font-tertiary);">There\'s no match saved yet!</h5>',"\n            </div>\n        </div>\n        ");case 6:case"end":return e.stop()}}),e,this)}))),function(){return s.apply(this,arguments)})},{key:"loading",value:function(){this.innerHTML='\n        <div class="container centering">\n            <h5>Next Matches</h5>\n            <div class="today-container">\n                <div class="progress"><div class="indeterminate"></div></div>\n            </div>\n        </div>\n        '}},{key:"getMatches",value:(i=A(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("home"!==window.location.hash.slice(1)){e.next=14;break}return e.prev=2,e.next=5,L();case 5:return t=e.sent,e.abrupt("return",t);case 9:return e.prev=9,e.t0=e.catch(2),e.abrupt("return",e.t0);case 12:e.next=24;break;case 14:return e.prev=14,e.next=17,Object(r.c)();case 17:return n=e.sent,e.abrupt("return",n);case 21:return e.prev=21,e.t1=e.catch(14),e.abrupt("return",e.t1);case 24:case"end":return e.stop()}}),e,null,[[2,9],[14,21]])}))),function(){return i.apply(this,arguments)})},{key:"loadUpdateBtn",value:function(e,t){var n=window.location.hash.slice(1),r=new Date;return"keeper"===n&&r>e?'<div class="update-match-btn" id="update-match" data-id="'.concat(t,'">\n                <i class="fad fa-sync"></i>\n            </div>'):""}},{key:"cardItem",value:function(e){var t=e.id,n=e.homeTeam,r=e.awayTeam,o=e.utcDate,a=new Date(o),c=[a.getHours().toLocaleString(),1===a.getMinutes().toLocaleString().length?"0"+a.getMinutes().toLocaleString():a.getMinutes().toLocaleString()],i=c[0]+":"+c[1],s=window.location.hash.slice(1);return'\n        <div class="today-card">\n            <div>\n                <p>'.concat(n.name,'</p>\n            </div>\n            <div class="score">\n                <p id="score-').concat(t,'">').concat(i,"</p>\n            </div>\n            <div>\n                <p>").concat(r.name,'</p>\n            </div>\n            <div class="save-match-btn" id="save-match" data-id="').concat(t,'" data-target="delete-modal">\n                ').concat("home"===s?'<i class="fad fa-save"></i>':'<i class="fad fa-trash"></i>',"\n            </div>\n            ").concat(this.loadUpdateBtn(a,t),"\n        </div>\n        ")}},{key:"render",value:function(){var e=this;if(this.innerHTML='\n        <div class="container centering">\n            <h5>Next Matches</h5>\n            <div class="today-container">\n                '.concat(this._list.filter((function(e){return"POSTPONED"!==e.status})).reduce((function(t,n){return t+e.cardItem(n)}),""),'\n            </div>\n            <div id="delete-modal" class="modal">\n                <div class="modal-content">\n                    <h4>Remove Saved Match</h4>\n                    <p>Are you sure you want to remove this match from Keeper?</p>\n                </div>\n                <div class="modal-footer">\n                    <button id="agree-btn" class="modal-close waves-effect waves-green btn-flat">Yep</button>\n                    <button id="cancel-btn" class="modal-close waves-effect waves-green btn-flat">Nope</button>\n                </div>\n            </div>\n        </div>\n        '),"home"===window.location.hash.slice(1))document.querySelectorAll(".save-match-btn").forEach((function(e){e.addEventListener("click",A(regeneratorRuntime.mark((function t(){var n,o,a,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.getAttribute("data-id"),o=M.toast({html:"Wait a sec..",classes:"save-toast"}),t.next=4,C(n);case 4:if(!(a=t.sent)){t.next=13;break}return t.next=8,Object(r.e)(a);case 8:c=t.sent,o.dismiss(),c?"".concat(c).match("Key already exists")?M.toast({html:"Match already saved!",classes:"save-toast"}):M.toast({html:"You can't save while offline!",classes:"save-toast"}):M.toast({html:"Match saved!",classes:"save-toast"}),t.next=15;break;case 13:o.dismiss(),M.toast({html:"Something went wrong. Try again later!",classes:"save-toast"});case 15:case"end":return t.stop()}}),t)}))))}));else{var t=document.querySelectorAll(".save-match-btn"),n=document.querySelector(".modal"),o=M.Modal.init(n),a=document.querySelector("#agree-btn");document.querySelector("#cancel-btn"),t.forEach((function(e){e.addEventListener("click",(function(){o.open(),a.addEventListener("click",A(regeneratorRuntime.mark((function t(){var n,a;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.getAttribute("data-id"),a=M.toast({html:"Wait a sec..",classes:"save-toast"}),t.next=4,Object(r.a)(n);case 4:t.sent,a.dismiss(),M.toast({html:"Match deleted!",classes:"save-toast"}),window.location.reload(),o.destroy();case 9:case"end":return t.stop()}}),t)}))))}))})),document.querySelectorAll(".update-match-btn").forEach((function(e){e.addEventListener("click",A(regeneratorRuntime.mark((function t(){var n,o,a,c,i,s;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.getAttribute("data-id"),o=M.toast({html:"Wait a sec..",classes:"save-toast"}),t.next=4,C(n);case 4:if(!(a=t.sent)||!a.score){t.next=15;break}return c=a.score.fullTime,i=c.homeTeam,s=c.awayTeam,t.next=9,Object(r.g)(a);case 9:t.sent,o.dismiss(),document.querySelector("#score-".concat(n)).innerHTML="⬆️ ".concat(null===i?0:i,":").concat(null===s?0:s," ⬇️"),t.next=17;break;case 15:o.dismiss(),M.toast({html:"Something went wrong. Try again later!",classes:"save-toast"});case 17:case"end":return t.stop()}}),t)}))))}))}}}])&&U(o.prototype,a),c&&U(o,c),l}(F(HTMLElement));function Y(e,t,n,r,o,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(r,o)}function z(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function c(e){Y(a,r,o,c,i,"next",e)}function i(e){Y(a,r,o,c,i,"throw",e)}c(void 0)}))}}customElements.define("next-elem",G);var J=function(){var e=z(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=function(){var e=z(regeneratorRuntime.mark((function e(t){var n,r,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n={content:""},e.prev=1,e.next=4,P.a.get("/src/pages/".concat(t,".html"));case 4:200===(r=e.sent).status?(n.content=r.data,o=document.querySelector("#main-content"),history.pushState(n,null,"index.html#".concat(t)),window.onpopstate=function(e){e.state&&(n=e.state,o.innerHTML=n.content)},o.innerHTML=n.content):console.error("Something went wrong on load content!"),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),console.error("Something went wrong on load content! ".concat(e.t0));case 11:case"end":return e.stop()}}),e,null,[[1,8]])})));return function(t){return e.apply(this,arguments)}}(),""===(n=window.location.hash.slice(1))&&(n="home"),e.next=5,t(n);case 5:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),V=function(e){for(var t=(e+"=".repeat((4-e.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),n=window.atob(t),r=new Uint8Array(n.length),o=0;o<n.length;++o)r[o]=n.charCodeAt(o);return r};document.addEventListener("DOMContentLoaded",(function(){"serviceWorker"in navigator?navigator.serviceWorker.register("/dist/service-worker.js").then((function(){console.log("DIST Service Worker successfully registered"),"Notification"in window&&Notification.requestPermission().then((function(e){"denied"!==e?"default"!==e?navigator.serviceWorker.getRegistration().then((function(e){e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:V("BGEjTEacb-o9PYEAk2Jz_He_CbuYVm6qpvbdSwi5u8j8Fv1GDz7p_dSMOK3Ka0b3Vak0Pz6ypdsa_nrUO1M5Rs4")}).then((function(e){console.log("Subscription completed with endpoint: ",e.endpoint),console.log("Subscription completed with p256dh key: ",btoa(String.fromCharCode.apply(null,new Uint8Array(e.getKey("p256dh"))))),console.log("Subscription completed with auth key: ",btoa(String.fromCharCode.apply(null,new Uint8Array(e.getKey("auth")))))})).catch((function(e){console.error("Subscription cannot be done ",e.message)})),console.log("Notification Allowed!")})):console.error("User closed the prompt!"):console.log("Notification blocked by user!")})),J()})).catch((function(){console.log("Failed to register DIST Service Worker")})):console.log("Service Worker isn't supported in this browser.")}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,